name: Build

on:
  push:
    paths:
      - 'source/**.go'
      - 'go.mod'
      - '.github/workflows/ci.yml'
    branches:
      - '**'
    tags:
     - '*.*.*'
  workflow_dispatch:

env:
  ARTIFACT_NAME: kasa-smart-plug

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        name: [ 'Windows', 'Linux - glibc', 'Linux - musl' ]
        include:
          - name: Windows
            runner: windows-2022
            os: windows
            arch: amd64
          - name: Linux - glibc
            runner: ubuntu-22.04
            os: linux
            arch: amd64
            library: glibc
          - name: Linux - musl
            runner: ubuntu-22.04
            os: linux
            arch: amd64
            library: musl
    permissions:
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Install build tools
        if: ${{ matrix.library == 'musl' }}
        run: sudo apt-get install --no-install-recommends --yes musl-tools

      - name: Construct executable name
        id: name
        env:
          BASE_NAME: ${{ env.ARTIFACT_NAME }}
          OPERATING_SYSTEM: ${{ matrix.os }}
          ARCHITECTURE: ${{ matrix.arch }}
          LIBRARY: ${{ matrix.library }}
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { BASE_NAME, OPERATING_SYSTEM, ARCHITECTURE, LIBRARY } = process.env;
            return `${ BASE_NAME }-${ OPERATING_SYSTEM }-${ ARCHITECTURE }${ LIBRARY ?? "" }${ OPERATING_SYSTEM == "windows" ? ".exe" : "" }`

      - name: Build project
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CC: ${{ matrix.library == 'musl' && '/usr/bin/musl-gcc' || '/usr/bin/gcc' }}
        run: go build -v -ldflags='-s -w' -o ${{ steps.name.outputs.result }} ./source/

      - name: Strip debug symbols from executable
        run: strip ${{ steps.name.outputs.result }}
        
      - name: Print executable information
        run: file ${{ steps.name.outputs.result }} && sha256sum ${{ steps.name.outputs.result }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ steps.name.outputs.result }}

  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: build
    if: ${{ github.event_name == 'push' && github.event.pull_request == null && !startsWith( github.ref, 'refs/heads/dependabot/' ) && github.ref_type == 'tag' }}
    permissions:
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./builds/

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          draft: true
          files: ./builds/*
          body: ${{ github.ref_name }}
